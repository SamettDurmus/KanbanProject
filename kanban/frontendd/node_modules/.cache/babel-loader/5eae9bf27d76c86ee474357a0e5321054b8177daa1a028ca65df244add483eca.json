{"ast":null,"code":"// import { configureStore } from '@reduxjs/toolkit';\n// import tasksReducer from './tasksSlice';\n\n// export const store = configureStore({\n//   reducer: {\n//     tasks: tasksReducer,\n//   },\n// });\n\n// export type RootState = ReturnType<typeof store.getState>;\n// export type AppDispatch = typeof store.dispatch;\n\nimport { configureStore } from '@reduxjs/toolkit';\nimport tasksReducer from './tasksSlice';\nconst store = configureStore({\n  reducer: {\n    tasks: tasksReducer\n  }\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\n\nexport default store;","map":{"version":3,"names":["configureStore","tasksReducer","store","reducer","tasks"],"sources":["C:/Users/90549/Desktop/kanban/kanban-board/frontend/src/redux/store.ts"],"sourcesContent":["// import { configureStore } from '@reduxjs/toolkit';\r\n// import tasksReducer from './tasksSlice';\r\n\r\n// export const store = configureStore({\r\n//   reducer: {\r\n//     tasks: tasksReducer,\r\n//   },\r\n// });\r\n\r\n// export type RootState = ReturnType<typeof store.getState>;\r\n// export type AppDispatch = typeof store.dispatch;\r\n\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport tasksReducer from './tasksSlice';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    tasks: tasksReducer,\r\n  },\r\n});\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,YAAY,MAAM,cAAc;AAEvC,MAAMC,KAAK,GAAGF,cAAc,CAAC;EAC3BG,OAAO,EAAE;IACPC,KAAK,EAAEH;EACT;AACF,CAAC,CAAC;;AAEF;;AAIA,eAAeC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}