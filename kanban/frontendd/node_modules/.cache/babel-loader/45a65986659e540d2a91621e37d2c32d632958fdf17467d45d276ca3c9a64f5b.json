{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\90549\\\\Desktop\\\\kanban\\\\kanban-board\\\\frontend\\\\src\\\\components\\\\KanbanBoard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTasks, updateTaskInState, deleteTask, addTask, addBoard } from '../redux/tasksSlice';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanBoard = () => {\n  _s();\n  const dispatch = useDispatch();\n  const tasks = useSelector(state => state.tasks.tasks);\n  const boards = useSelector(state => state.tasks.boards);\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n  const [newBoardTitle, setNewBoardTitle] = useState('');\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [editingTaskTitle, setEditingTaskTitle] = useState('');\n  const [editingTaskStatus, setEditingTaskStatus] = useState('To Do');\n  useEffect(() => {\n    dispatch(fetchTasks());\n  }, [dispatch]);\n  const handleDragEnd = result => {\n    if (!result.destination) return;\n    const reorderedTasks = [...tasks];\n    const [movedTask] = reorderedTasks.splice(result.source.index, 1);\n    movedTask.status = result.destination.droppableId;\n    reorderedTasks.splice(result.destination.index, 0, movedTask);\n    dispatch(updateTaskInState(reorderedTasks));\n  };\n  const handleDeleteTask = taskId => {\n    dispatch(deleteTask(taskId));\n  };\n  const handleAddTask = () => {\n    const newTask = {\n      id: Math.random().toString(36).substr(2, 9),\n      title: newTaskTitle,\n      status: 'To Do'\n    };\n    dispatch(addTask(newTask));\n    setNewTaskTitle('');\n  };\n  const handleAddBoard = () => {\n    dispatch(addBoard(newBoardTitle));\n    setNewBoardTitle('');\n  };\n  const handleEditTask = taskId => {\n    setEditingTaskId(taskId);\n    const task = tasks.find(task => task.id === taskId);\n    if (task) {\n      setEditingTaskTitle(task.title);\n      setEditingTaskStatus(task.status);\n    }\n  };\n  const handleUpdateTask = () => {\n    const updatedTasks = tasks.map(task => task.id === editingTaskId ? {\n      ...task,\n      title: editingTaskTitle,\n      status: editingTaskStatus\n    } : task);\n    dispatch(updateTaskInState(updatedTasks));\n    setEditingTaskId(null);\n    setEditingTaskTitle('');\n    setEditingTaskStatus('To Do');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTaskTitle,\n      onChange: e => setNewTaskTitle(e.target.value),\n      placeholder: \"Yeni g\\xF6rev ekle...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"Ekle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newBoardTitle,\n      onChange: e => setNewBoardTitle(e.target.value),\n      placeholder: \"Yeni pano ekle...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddBoard,\n      children: \"Pano Ekle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: boards.map((board, index) => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: board,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            style: {\n              margin: '0 10px',\n              padding: '10px',\n              width: '30%',\n              backgroundColor: '#f8f8f8',\n              borderRadius: '4px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: board\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 37\n            }, this), tasks.filter(task => task.status === board).map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: task.id,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                style: {\n                  marginBottom: '8px',\n                  padding: '16px',\n                  backgroundColor: 'white',\n                  borderRadius: '4px',\n                  boxShadow: '0 1px 3px rgba(0,0,0,0.2)',\n                  ...provided.draggableProps.style\n                },\n                children: editingTaskId === task.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: editingTaskTitle,\n                    onChange: e => setEditingTaskTitle(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 65\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: editingTaskStatus,\n                    onChange: e => setEditingTaskStatus(e.target.value),\n                    children: boards.map(board => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: board,\n                      children: board\n                    }, board, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 73\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 65\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleUpdateTask,\n                    children: \"G\\xFCncelle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 65\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 61\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [task.title, /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleEditTask(task.id),\n                    children: \"D\\xFCzenle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 65\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleDeleteTask(task.id),\n                    children: \"Sil\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 65\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 61\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 53\n              }, this)\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 45\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(KanbanBoard, \"vC9GAuap1DC1ahhYmK8txafQo0U=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","fetchTasks","updateTaskInState","deleteTask","addTask","addBoard","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","KanbanBoard","_s","dispatch","tasks","state","boards","newTaskTitle","setNewTaskTitle","newBoardTitle","setNewBoardTitle","editingTaskId","setEditingTaskId","editingTaskTitle","setEditingTaskTitle","editingTaskStatus","setEditingTaskStatus","handleDragEnd","result","destination","reorderedTasks","movedTask","splice","source","index","status","droppableId","handleDeleteTask","taskId","handleAddTask","newTask","id","Math","random","toString","substr","title","handleAddBoard","handleEditTask","task","find","handleUpdateTask","updatedTasks","map","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDragEnd","style","display","justifyContent","board","provided","droppableProps","ref","innerRef","margin","padding","width","backgroundColor","borderRadius","filter","draggableId","draggableProps","dragHandleProps","marginBottom","boxShadow","_c","$RefreshReg$"],"sources":["C:/Users/90549/Desktop/kanban/kanban-board/frontend/src/components/KanbanBoard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchTasks, updateTaskInState, deleteTask, addTask, addBoard } from '../redux/tasksSlice';\r\nimport { RootState, AppDispatch } from '../redux/store';\r\nimport { DragDropContext, Droppable, Draggable, DropResult } from 'react-beautiful-dnd';\r\n\r\nconst KanbanBoard: React.FC = () => {\r\n    const dispatch = useDispatch<AppDispatch>();\r\n    const tasks = useSelector((state: RootState) => state.tasks.tasks);\r\n    const boards = useSelector((state: RootState) => state.tasks.boards);\r\n    const [newTaskTitle, setNewTaskTitle] = useState('');\r\n    const [newBoardTitle, setNewBoardTitle] = useState('');\r\n    const [editingTaskId, setEditingTaskId] = useState<string | null>(null);\r\n    const [editingTaskTitle, setEditingTaskTitle] = useState('');\r\n    const [editingTaskStatus, setEditingTaskStatus] = useState<string>('To Do');\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchTasks());\r\n    }, [dispatch]);\r\n\r\n    const handleDragEnd = (result: DropResult) => {\r\n        if (!result.destination) return;\r\n\r\n        const reorderedTasks = [...tasks];\r\n        const [movedTask] = reorderedTasks.splice(result.source.index, 1);\r\n        movedTask.status = result.destination.droppableId;\r\n        reorderedTasks.splice(result.destination.index, 0, movedTask);\r\n\r\n        dispatch(updateTaskInState(reorderedTasks));\r\n    };\r\n\r\n    const handleDeleteTask = (taskId: string) => {\r\n        dispatch(deleteTask(taskId));\r\n    };\r\n\r\n    const handleAddTask = () => {\r\n        const newTask = {\r\n            id: Math.random().toString(36).substr(2, 9),\r\n            title: newTaskTitle,\r\n            status: 'To Do'\r\n        };\r\n        dispatch(addTask(newTask));\r\n        setNewTaskTitle('');\r\n    };\r\n\r\n    const handleAddBoard = () => {\r\n        dispatch(addBoard(newBoardTitle));\r\n        setNewBoardTitle('');\r\n    };\r\n\r\n    const handleEditTask = (taskId: string) => {\r\n        setEditingTaskId(taskId);\r\n        const task = tasks.find(task => task.id === taskId);\r\n        if (task) {\r\n            setEditingTaskTitle(task.title);\r\n            setEditingTaskStatus(task.status);\r\n        }\r\n    };\r\n\r\n    const handleUpdateTask = () => {\r\n        const updatedTasks = tasks.map(task => \r\n            task.id === editingTaskId ? { ...task, title: editingTaskTitle, status: editingTaskStatus } : task\r\n        );\r\n        dispatch(updateTaskInState(updatedTasks));\r\n        setEditingTaskId(null);\r\n        setEditingTaskTitle('');\r\n        setEditingTaskStatus('To Do');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"text\"\r\n                value={newTaskTitle}\r\n                onChange={(e) => setNewTaskTitle(e.target.value)}\r\n                placeholder=\"Yeni görev ekle...\"\r\n            />\r\n            <button onClick={handleAddTask}>Ekle</button>\r\n\r\n            <input\r\n                type=\"text\"\r\n                value={newBoardTitle}\r\n                onChange={(e) => setNewBoardTitle(e.target.value)}\r\n                placeholder=\"Yeni pano ekle...\"\r\n            />\r\n            <button onClick={handleAddBoard}>Pano Ekle</button>\r\n\r\n            <DragDropContext onDragEnd={handleDragEnd}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    {boards.map((board, index) => (\r\n                        <Droppable droppableId={board} key={index}>\r\n                            {(provided) => (\r\n                                <div\r\n                                    {...provided.droppableProps}\r\n                                    ref={provided.innerRef}\r\n                                    style={{ margin: '0 10px', padding: '10px', width: '30%', backgroundColor: '#f8f8f8', borderRadius: '4px' }}\r\n                                >\r\n                                    <h2>{board}</h2>\r\n                                    {tasks\r\n                                        .filter(task => task.status === board)\r\n                                        .map((task, index) => (\r\n                                            <Draggable key={task.id} draggableId={task.id} index={index}>\r\n                                                {(provided) => (\r\n                                                    <div\r\n                                                        ref={provided.innerRef}\r\n                                                        {...provided.draggableProps}\r\n                                                        {...provided.dragHandleProps}\r\n                                                        style={{\r\n                                                            marginBottom: '8px',\r\n                                                            padding: '16px',\r\n                                                            backgroundColor: 'white',\r\n                                                            borderRadius: '4px',\r\n                                                            boxShadow: '0 1px 3px rgba(0,0,0,0.2)',\r\n                                                            ...provided.draggableProps.style\r\n                                                        }}\r\n                                                    >\r\n                                                        {editingTaskId === task.id ? (\r\n                                                            <div>\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    value={editingTaskTitle}\r\n                                                                    onChange={(e) => setEditingTaskTitle(e.target.value)}\r\n                                                                />\r\n                                                                <select\r\n                                                                    value={editingTaskStatus}\r\n                                                                    onChange={(e) => setEditingTaskStatus(e.target.value)}\r\n                                                                >\r\n                                                                    {boards.map((board) => (\r\n                                                                        <option key={board} value={board}>\r\n                                                                            {board}\r\n                                                                        </option>\r\n                                                                    ))}\r\n                                                                </select>\r\n                                                                <button onClick={handleUpdateTask}>Güncelle</button>\r\n                                                            </div>\r\n                                                        ) : (\r\n                                                            <div>\r\n                                                                {task.title}\r\n                                                                <button onClick={() => handleEditTask(task.id)}>Düzenle</button>\r\n                                                                <button onClick={() => handleDeleteTask(task.id)}>Sil</button>\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </div>\r\n                                                )}\r\n                                            </Draggable>\r\n                                        ))}\r\n                                    {provided.placeholder}\r\n                                </div>\r\n                            )}\r\n                        </Droppable>\r\n                    ))}\r\n                </div>\r\n            </DragDropContext>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default KanbanBoard;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,EAAEC,iBAAiB,EAAEC,UAAU,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,qBAAqB;AAElG,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAoB,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExF,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAMC,QAAQ,GAAGd,WAAW,CAAc,CAAC;EAC3C,MAAMe,KAAK,GAAGd,WAAW,CAAEe,KAAgB,IAAKA,KAAK,CAACD,KAAK,CAACA,KAAK,CAAC;EAClE,MAAME,MAAM,GAAGhB,WAAW,CAAEe,KAAgB,IAAKA,KAAK,CAACD,KAAK,CAACE,MAAM,CAAC;EACpE,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACqB,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACuB,aAAa,EAAEC,gBAAgB,CAAC,GAAGxB,QAAQ,CAAgB,IAAI,CAAC;EACvE,MAAM,CAACyB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAAC2B,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG5B,QAAQ,CAAS,OAAO,CAAC;EAE3ED,SAAS,CAAC,MAAM;IACZgB,QAAQ,CAACZ,UAAU,CAAC,CAAC,CAAC;EAC1B,CAAC,EAAE,CAACY,QAAQ,CAAC,CAAC;EAEd,MAAMc,aAAa,GAAIC,MAAkB,IAAK;IAC1C,IAAI,CAACA,MAAM,CAACC,WAAW,EAAE;IAEzB,MAAMC,cAAc,GAAG,CAAC,GAAGhB,KAAK,CAAC;IACjC,MAAM,CAACiB,SAAS,CAAC,GAAGD,cAAc,CAACE,MAAM,CAACJ,MAAM,CAACK,MAAM,CAACC,KAAK,EAAE,CAAC,CAAC;IACjEH,SAAS,CAACI,MAAM,GAAGP,MAAM,CAACC,WAAW,CAACO,WAAW;IACjDN,cAAc,CAACE,MAAM,CAACJ,MAAM,CAACC,WAAW,CAACK,KAAK,EAAE,CAAC,EAAEH,SAAS,CAAC;IAE7DlB,QAAQ,CAACX,iBAAiB,CAAC4B,cAAc,CAAC,CAAC;EAC/C,CAAC;EAED,MAAMO,gBAAgB,GAAIC,MAAc,IAAK;IACzCzB,QAAQ,CAACV,UAAU,CAACmC,MAAM,CAAC,CAAC;EAChC,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxB,MAAMC,OAAO,GAAG;MACZC,EAAE,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;MAC3CC,KAAK,EAAE7B,YAAY;MACnBkB,MAAM,EAAE;IACZ,CAAC;IACDtB,QAAQ,CAACT,OAAO,CAACoC,OAAO,CAAC,CAAC;IAC1BtB,eAAe,CAAC,EAAE,CAAC;EACvB,CAAC;EAED,MAAM6B,cAAc,GAAGA,CAAA,KAAM;IACzBlC,QAAQ,CAACR,QAAQ,CAACc,aAAa,CAAC,CAAC;IACjCC,gBAAgB,CAAC,EAAE,CAAC;EACxB,CAAC;EAED,MAAM4B,cAAc,GAAIV,MAAc,IAAK;IACvChB,gBAAgB,CAACgB,MAAM,CAAC;IACxB,MAAMW,IAAI,GAAGnC,KAAK,CAACoC,IAAI,CAACD,IAAI,IAAIA,IAAI,CAACR,EAAE,KAAKH,MAAM,CAAC;IACnD,IAAIW,IAAI,EAAE;MACNzB,mBAAmB,CAACyB,IAAI,CAACH,KAAK,CAAC;MAC/BpB,oBAAoB,CAACuB,IAAI,CAACd,MAAM,CAAC;IACrC;EACJ,CAAC;EAED,MAAMgB,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,MAAMC,YAAY,GAAGtC,KAAK,CAACuC,GAAG,CAACJ,IAAI,IAC/BA,IAAI,CAACR,EAAE,KAAKpB,aAAa,GAAG;MAAE,GAAG4B,IAAI;MAAEH,KAAK,EAAEvB,gBAAgB;MAAEY,MAAM,EAAEV;IAAkB,CAAC,GAAGwB,IAClG,CAAC;IACDpC,QAAQ,CAACX,iBAAiB,CAACkD,YAAY,CAAC,CAAC;IACzC9B,gBAAgB,CAAC,IAAI,CAAC;IACtBE,mBAAmB,CAAC,EAAE,CAAC;IACvBE,oBAAoB,CAAC,OAAO,CAAC;EACjC,CAAC;EAED,oBACIhB,OAAA;IAAA4C,QAAA,gBACI5C,OAAA;MACI6C,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEvC,YAAa;MACpBwC,QAAQ,EAAGC,CAAC,IAAKxC,eAAe,CAACwC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACjDI,WAAW,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACFtD,OAAA;MAAQuD,OAAO,EAAE1B,aAAc;MAAAe,QAAA,EAAC;IAAI;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE7CtD,OAAA;MACI6C,IAAI,EAAC,MAAM;MACXC,KAAK,EAAErC,aAAc;MACrBsC,QAAQ,EAAGC,CAAC,IAAKtC,gBAAgB,CAACsC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAClDI,WAAW,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACFtD,OAAA;MAAQuD,OAAO,EAAElB,cAAe;MAAAO,QAAA,EAAC;IAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEnDtD,OAAA,CAACJ,eAAe;MAAC4D,SAAS,EAAEvC,aAAc;MAAA2B,QAAA,eACtC5C,OAAA;QAAKyD,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEC,cAAc,EAAE;QAAgB,CAAE;QAAAf,QAAA,EAC5DtC,MAAM,CAACqC,GAAG,CAAC,CAACiB,KAAK,EAAEpC,KAAK,kBACrBxB,OAAA,CAACH,SAAS;UAAC6B,WAAW,EAAEkC,KAAM;UAAAhB,QAAA,EACxBiB,QAAQ,iBACN7D,OAAA;YAAA,GACQ6D,QAAQ,CAACC,cAAc;YAC3BC,GAAG,EAAEF,QAAQ,CAACG,QAAS;YACvBP,KAAK,EAAE;cAAEQ,MAAM,EAAE,QAAQ;cAAEC,OAAO,EAAE,MAAM;cAAEC,KAAK,EAAE,KAAK;cAAEC,eAAe,EAAE,SAAS;cAAEC,YAAY,EAAE;YAAM,CAAE;YAAAzB,QAAA,gBAE5G5C,OAAA;cAAA4C,QAAA,EAAKgB;YAAK;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,EACflD,KAAK,CACDkE,MAAM,CAAC/B,IAAI,IAAIA,IAAI,CAACd,MAAM,KAAKmC,KAAK,CAAC,CACrCjB,GAAG,CAAC,CAACJ,IAAI,EAAEf,KAAK,kBACbxB,OAAA,CAACF,SAAS;cAAeyE,WAAW,EAAEhC,IAAI,CAACR,EAAG;cAACP,KAAK,EAAEA,KAAM;cAAAoB,QAAA,EACtDiB,QAAQ,iBACN7D,OAAA;gBACI+D,GAAG,EAAEF,QAAQ,CAACG,QAAS;gBAAA,GACnBH,QAAQ,CAACW,cAAc;gBAAA,GACvBX,QAAQ,CAACY,eAAe;gBAC5BhB,KAAK,EAAE;kBACHiB,YAAY,EAAE,KAAK;kBACnBR,OAAO,EAAE,MAAM;kBACfE,eAAe,EAAE,OAAO;kBACxBC,YAAY,EAAE,KAAK;kBACnBM,SAAS,EAAE,2BAA2B;kBACtC,GAAGd,QAAQ,CAACW,cAAc,CAACf;gBAC/B,CAAE;gBAAAb,QAAA,EAEDjC,aAAa,KAAK4B,IAAI,CAACR,EAAE,gBACtB/B,OAAA;kBAAA4C,QAAA,gBACI5C,OAAA;oBACI6C,IAAI,EAAC,MAAM;oBACXC,KAAK,EAAEjC,gBAAiB;oBACxBkC,QAAQ,EAAGC,CAAC,IAAKlC,mBAAmB,CAACkC,CAAC,CAACC,MAAM,CAACH,KAAK;kBAAE;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACxD,CAAC,eACFtD,OAAA;oBACI8C,KAAK,EAAE/B,iBAAkB;oBACzBgC,QAAQ,EAAGC,CAAC,IAAKhC,oBAAoB,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;oBAAAF,QAAA,EAErDtC,MAAM,CAACqC,GAAG,CAAEiB,KAAK,iBACd5D,OAAA;sBAAoB8C,KAAK,EAAEc,KAAM;sBAAAhB,QAAA,EAC5BgB;oBAAK,GADGA,KAAK;sBAAAT,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAEV,CACX;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACE,CAAC,eACTtD,OAAA;oBAAQuD,OAAO,EAAEd,gBAAiB;oBAAAG,QAAA,EAAC;kBAAQ;oBAAAO,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnD,CAAC,gBAENtD,OAAA;kBAAA4C,QAAA,GACKL,IAAI,CAACH,KAAK,eACXpC,OAAA;oBAAQuD,OAAO,EAAEA,CAAA,KAAMjB,cAAc,CAACC,IAAI,CAACR,EAAE,CAAE;oBAAAa,QAAA,EAAC;kBAAO;oBAAAO,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eAChEtD,OAAA;oBAAQuD,OAAO,EAAEA,CAAA,KAAM5B,gBAAgB,CAACY,IAAI,CAACR,EAAE,CAAE;oBAAAa,QAAA,EAAC;kBAAG;oBAAAO,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7D;cACR;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA;YACR,GA1CWf,IAAI,CAACR,EAAE;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OA2CZ,CACd,CAAC,EACLO,QAAQ,CAACX,WAAW;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB;QACR,GA1D+B9B,KAAK;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA2D9B,CACd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEd,CAAC;AAACpD,EAAA,CArJID,WAAqB;EAAA,QACNZ,WAAW,EACdC,WAAW,EACVA,WAAW;AAAA;AAAAsF,EAAA,GAHxB3E,WAAqB;AAuJ3B,eAAeA,WAAW;AAAC,IAAA2E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}