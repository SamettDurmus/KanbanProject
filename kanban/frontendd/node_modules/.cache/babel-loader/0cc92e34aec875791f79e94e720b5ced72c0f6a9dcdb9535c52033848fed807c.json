{"ast":null,"code":"// import { configureStore } from '@reduxjs/toolkit';\n// import tasksReducer from './tasksSlice';\n\n// export const store = configureStore({\n//   reducer: {\n//     tasks: tasksReducer,\n//   },\n// });\n\n// export type RootState = ReturnType<typeof store.getState>;\n// export type AppDispatch = typeof store.dispatch;\n\n// import { configureStore } from '@reduxjs/toolkit';\n// import tasksReducer from './tasksSlice';\n\n// const store = configureStore({\n//   reducer: {\n//     tasks: tasksReducer,\n//   },\n// });\n\n// // Infer the `RootState` and `AppDispatch` types from the store itself\n// export type RootState = ReturnType<typeof store.getState>;\n// export type AppDispatch = typeof store.dispatch;\n\n// export default store;\n\nimport { configureStore } from '@reduxjs/toolkit';\nimport tasksReducer from './tasksSlice';\nexport const store = configureStore({\n  reducer: {\n    tasks: tasksReducer\n  }\n});\nexport default store;","map":{"version":3,"names":["configureStore","tasksReducer","store","reducer","tasks"],"sources":["C:/Users/90549/Desktop/kanban/kanban-board/frontend/src/redux/store.ts"],"sourcesContent":["// import { configureStore } from '@reduxjs/toolkit';\r\n// import tasksReducer from './tasksSlice';\r\n\r\n// export const store = configureStore({\r\n//   reducer: {\r\n//     tasks: tasksReducer,\r\n//   },\r\n// });\r\n\r\n// export type RootState = ReturnType<typeof store.getState>;\r\n// export type AppDispatch = typeof store.dispatch;\r\n\r\n// import { configureStore } from '@reduxjs/toolkit';\r\n// import tasksReducer from './tasksSlice';\r\n\r\n// const store = configureStore({\r\n//   reducer: {\r\n//     tasks: tasksReducer,\r\n//   },\r\n// });\r\n\r\n// // Infer the `RootState` and `AppDispatch` types from the store itself\r\n// export type RootState = ReturnType<typeof store.getState>;\r\n// export type AppDispatch = typeof store.dispatch;\r\n\r\n// export default store;\r\n\r\nimport { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport tasksReducer from './tasksSlice';\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        tasks: tasksReducer,\r\n    },\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, Action<string>>;\r\n\r\nexport default store;"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,SAASA,cAAc,QAA6B,kBAAkB;AACtE,OAAOC,YAAY,MAAM,cAAc;AAEvC,OAAO,MAAMC,KAAK,GAAGF,cAAc,CAAC;EAChCG,OAAO,EAAE;IACLC,KAAK,EAAEH;EACX;AACJ,CAAC,CAAC;AAMF,eAAeC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}